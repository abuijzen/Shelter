// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shelter.shared;

namespace Shelter.mvc.Migrations
{
    [DbContext(typeof(ShelterContext))]
    [Migration("20200110232243_SeedOtherShelters")]
    partial class SeedOtherShelters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Shelter.shared.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Allergies")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Bio")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsAnimalFriendly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFertile")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsKidFriendly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSpeciesFriendly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Race")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Allergies = "catnip",
                            Bio = "Felix is een iets schuwere kat die een baasje nodig heeft met veel geduld.",
                            DateOfBirth = new DateTime(2005, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Felix",
                            Race = "Britse Korthaar",
                            ShelterId = 1,
                            Since = new DateTime(2007, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Allergies = "dogs",
                            Bio = "Picasso is een kat die samen met Binky geplaatst dient te worden.",
                            DateOfBirth = new DateTime(2005, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Picasso",
                            Race = "Ragdoll",
                            ShelterId = 1,
                            Since = new DateTime(2007, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Allergies = "none",
                            Bio = "Ior is een kindvriendelijk konijn die graag bij andere konijntjes gezet wordt indien mogelijk.",
                            DateOfBirth = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Ior",
                            Race = "Hollander",
                            ShelterId = 1,
                            Since = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Allergies = "geen",
                            Bio = "Minoes is een sociale en lieve kitten die net van een nestje komt.",
                            DateOfBirth = new DateTime(2010, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = true,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Minoes",
                            Race = "Europese Korthaar",
                            ShelterId = 1,
                            Since = new DateTime(2019, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Allergies = "geen",
                            Bio = "Binky is een kat die samen met Picasso geplaatst dient te worden.",
                            DateOfBirth = new DateTime(2016, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = true,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Binky",
                            Race = "Europese Korthaar",
                            ShelterId = 1,
                            Since = new DateTime(2018, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Allergies = "Chocolade",
                            Bio = "Mopsie is een gezonde mopshond gered uit de broodfok",
                            DateOfBirth = new DateTime(2017, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Mopsie",
                            Race = "Mopshond",
                            ShelterId = 1,
                            Since = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Allergies = "geen",
                            Bio = "Ludo is een lievertje maar niet voor andere dieren.",
                            DateOfBirth = new DateTime(2015, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = false,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = false,
                            Name = "Ludo",
                            Race = "Europeese korthaar",
                            ShelterId = 2,
                            Since = new DateTime(2018, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Allergies = "Kip",
                            Bio = "Puk is een echte ronkende franse buldog, door gezondheidsproblemen is hij bij ons beland",
                            DateOfBirth = new DateTime(2018, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Puk",
                            Race = "Franse Bulldog",
                            ShelterId = 2,
                            Since = new DateTime(2019, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Allergies = "geen",
                            Bio = "Moesti is een echte dierenvriend van kleine kinderen houden ze niet",
                            DateOfBirth = new DateTime(2014, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = false,
                            IsSpeciesFriendly = true,
                            Name = "Moesti",
                            Race = "Europeese korthaar",
                            ShelterId = 2,
                            Since = new DateTime(2016, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Allergies = "geen",
                            Bio = "Marcel is een oude gek, op zijn oude dag heeft hij nog veel liefde voor tennisballen",
                            DateOfBirth = new DateTime(2009, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Marcel",
                            Race = "Teckel",
                            ShelterId = 2,
                            Since = new DateTime(2019, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Allergies = "geen",
                            Bio = "Olaf is een vinnig beestje, perfect voor jonge gezinnen",
                            DateOfBirth = new DateTime(2017, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Olaf",
                            Race = "Rijnlander",
                            ShelterId = 2,
                            Since = new DateTime(2018, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Allergies = "geen",
                            Bio = "Garret houd van kinderen en mensen, van andere dieren gaat hij lopen.",
                            DateOfBirth = new DateTime(2015, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = false,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = false,
                            Name = "Garret",
                            Race = "Franse Hangoor",
                            ShelterId = 2,
                            Since = new DateTime(2019, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Allergies = "geen",
                            Bio = "Astrix is een grote jongen die veel liefde geeft",
                            DateOfBirth = new DateTime(2017, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = false,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Astrix",
                            Race = "Mastino Napoletano",
                            ShelterId = 2,
                            Since = new DateTime(2018, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Allergies = "kip",
                            Bio = "Rock is een grote dikke vriend van iedereen",
                            DateOfBirth = new DateTime(2016, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Rock",
                            Race = "Staffordshire Bull Terrier",
                            ShelterId = 2,
                            Since = new DateTime(2017, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Allergies = "geen",
                            Bio = "Een kat met de nodige kattenstreken.",
                            DateOfBirth = new DateTime(2003, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = false,
                            IsFertile = true,
                            IsKidFriendly = false,
                            IsSpeciesFriendly = false,
                            Name = "Wolf",
                            Race = "Bombay ",
                            ShelterId = 3,
                            Since = new DateTime(2004, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Allergies = "geen",
                            Bio = "Een lieverd, begroet iedereen met een kopstootje.",
                            DateOfBirth = new DateTime(2007, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Pom pom",
                            Race = "Bengaalse tijgerkat",
                            ShelterId = 3,
                            Since = new DateTime(2010, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Allergies = "wortels",
                            Bio = "Nijntje, lief klein konijntje.",
                            DateOfBirth = new DateTime(2018, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = true,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = false,
                            Name = "Nijntje",
                            Race = "Kleurdwerg",
                            ShelterId = 2,
                            Since = new DateTime(2018, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Allergies = "rinitis",
                            Bio = "Een witte konijn met een hoge aaibaarheidsfactor.",
                            DateOfBirth = new DateTime(2019, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = false,
                            Name = "Sneeuwtje",
                            Race = "Amerikaanse konijn",
                            ShelterId = 3,
                            Since = new DateTime(2019, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Allergies = "geen",
                            Bio = "Mimi is bang voor veel dingen maar overwint haar angsten voor haar baasjes.",
                            DateOfBirth = new DateTime(2002, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = false,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = false,
                            Name = "Mimi",
                            Race = "Pommeriaan",
                            ShelterId = 3,
                            Since = new DateTime(2018, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Allergies = "kip",
                            Bio = "Een jong meisje met klasse, dat is Elisabeth III",
                            DateOfBirth = new DateTime(2019, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAnimalFriendly = true,
                            IsFertile = false,
                            IsKidFriendly = true,
                            IsSpeciesFriendly = true,
                            Name = "Elisabeth III",
                            Race = "Bobtail",
                            ShelterId = 3,
                            Since = new DateTime(2019, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Shelter.shared.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Clawed")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clawed = true
                        },
                        new
                        {
                            Id = 2,
                            Clawed = true
                        },
                        new
                        {
                            Id = 4,
                            Clawed = true
                        },
                        new
                        {
                            Id = 5,
                            Clawed = true
                        },
                        new
                        {
                            Id = 7,
                            Clawed = true
                        },
                        new
                        {
                            Id = 9,
                            Clawed = true
                        },
                        new
                        {
                            Id = 15,
                            Clawed = true
                        },
                        new
                        {
                            Id = 16,
                            Clawed = true
                        });
                });

            modelBuilder.Entity("Shelter.shared.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Barker")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Barker = false
                        },
                        new
                        {
                            Id = 8,
                            Barker = true
                        },
                        new
                        {
                            Id = 10,
                            Barker = false
                        },
                        new
                        {
                            Id = 13,
                            Barker = true
                        },
                        new
                        {
                            Id = 14,
                            Barker = true
                        },
                        new
                        {
                            Id = 19,
                            Barker = true
                        },
                        new
                        {
                            Id = 20,
                            Barker = true
                        });
                });

            modelBuilder.Entity("Shelter.shared.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employees");
                });

            modelBuilder.Entity("Shelter.shared.Rabbit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Rabbits");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Size = "groot"
                        },
                        new
                        {
                            Id = 7
                        },
                        new
                        {
                            Id = 8
                        },
                        new
                        {
                            Id = 9
                        },
                        new
                        {
                            Id = 10
                        },
                        new
                        {
                            Id = 11
                        },
                        new
                        {
                            Id = 12
                        },
                        new
                        {
                            Id = 13
                        },
                        new
                        {
                            Id = 14
                        },
                        new
                        {
                            Id = 17,
                            Size = "small"
                        },
                        new
                        {
                            Id = 18,
                            Size = "small"
                        });
                });

            modelBuilder.Entity("Shelter.shared.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailAdress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Shelters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kievitstraat 40",
                            EmailAdress = "/",
                            ImageUrl = "canina",
                            Name = "Canina",
                            TelephoneNumber = "036771291"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Toekomststraat 4",
                            EmailAdress = "veeweyde.weelde@skynet.be",
                            ImageUrl = "image",
                            Name = "Veeweyde vzw",
                            TelephoneNumber = "014658626"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Houwaartstraat 15, 3210 Lubbeek",
                            EmailAdress = "info@kat-lijn.be",
                            ImageUrl = "https://www.dierendonatie.be/wp-content/uploads/2019/01/29570550_2080399628857532_4696137069563272630_n.jpg",
                            Name = "kat-lijn vzw",
                            TelephoneNumber = "0468 56 93 72"
                        });
                });

            modelBuilder.Entity("Shelter.shared.Administrator", b =>
                {
                    b.HasBaseType("Shelter.shared.Employees");

                    b.Property<int?>("ShelterId")
                        .HasColumnType("int");

                    b.HasIndex("ShelterId");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("Shelter.shared.Caretaker", b =>
                {
                    b.HasBaseType("Shelter.shared.Employees");

                    b.Property<int?>("ShelterId")
                        .HasColumnName("Caretaker_ShelterId")
                        .HasColumnType("int");

                    b.HasIndex("ShelterId");

                    b.HasDiscriminator().HasValue("Caretaker");
                });

            modelBuilder.Entity("Shelter.shared.Manager", b =>
                {
                    b.HasBaseType("Shelter.shared.Employees");

                    b.Property<int?>("ShelterId")
                        .HasColumnName("Manager_ShelterId")
                        .HasColumnType("int");

                    b.HasIndex("ShelterId");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("Shelter.shared.Animal", b =>
                {
                    b.HasOne("Shelter.shared.Shelter", null)
                        .WithMany("Animals")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shelter.shared.Administrator", b =>
                {
                    b.HasOne("Shelter.shared.Shelter", null)
                        .WithMany("Administrators")
                        .HasForeignKey("ShelterId");
                });

            modelBuilder.Entity("Shelter.shared.Caretaker", b =>
                {
                    b.HasOne("Shelter.shared.Shelter", null)
                        .WithMany("Caretakers")
                        .HasForeignKey("ShelterId");
                });

            modelBuilder.Entity("Shelter.shared.Manager", b =>
                {
                    b.HasOne("Shelter.shared.Shelter", null)
                        .WithMany("Managers")
                        .HasForeignKey("ShelterId");
                });
#pragma warning restore 612, 618
        }
    }
}
